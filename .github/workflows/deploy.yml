name: Build and Deploy Flask App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create .env file
      run: |
        echo "FLASK_APP=app.py" >> .env
        echo "FLASK_ENV=production" >> .env
        echo "SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "DB_NAME=sustain_app" >> .env
        echo "DB_USER=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "DB_HOST=db" >> .env
        echo "DB_PORT=5432" >> .env
    
    - name: Build Docker image
      run: |
        docker build -t flask-app:test .
        echo "Docker image built successfully!"
    
    - name: Test Docker image
      run: |
        echo "Testing if image was created..."
        docker images flask-app:test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create production .env file
      run: |
        echo "FLASK_APP=app.py" >> .env
        echo "FLASK_ENV=production" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "DB_NAME=sustain_app" >> .env
        echo "DB_USER=postgres" >> .env
        echo "DB_PASSWORD=postgres" >> .env
        echo "DB_HOST=db" >> .env
        echo "DB_PORT=5432" >> .env
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          gnkadimeng/sustain-app:latest
          gnkadimeng/sustain-app:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deployment success
      run: |
        echo "🚀 Image pushed successfully to Docker Hub!"
        echo "📦 Pull with: docker pull gnkadimeng/sustain-app:latest"
        echo "🏃 Run with: docker run -p 5000:5000 gnkadimeng/sustain-app:latest"